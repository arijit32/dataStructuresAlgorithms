// ConsoleApplication2.cpp : Defines the entry point for the console application.
// contains all source code

#include <iostream>
#include <algorithm>
#include <vector>
#include <fstream>
#include <cmath>
#include <iterator>

using namespace std;


void QuickSort(vector< int> & vec, unsigned int start_pos, unsigned int end_pos)
{
	// Termination condition for recursion: 
	// handled if the list contains just 1 element.

	if ((end_pos - start_pos) > 0)
	{
		unsigned int i, j;

		if ((end_pos - start_pos) > 10)
		{

			unsigned int array_position;
			int pivot;

			array_position = rand() % (end_pos - start_pos + 1) + start_pos;
			pivot = vec[array_position];
			swap(vec[start_pos], vec[array_position]);

			i = start_pos;
			j = start_pos + 1;
			while (j <= end_pos)
			{
				if (vec[j] < pivot)
				{
					++i;
					swap(vec[i], vec[j]);
				}
				++j;
			}
			swap(vec[start_pos], vec[i]);
			if (i > start_pos) QuickSort(vec, start_pos, i - 1);
			if (i < end_pos) QuickSort(vec, i + 1, end_pos);

		}
		else
		{
			// Insertion sort for less than 11 elements or less

			int x;

			for (i = start_pos + 1; i <= end_pos; ++i)
			{
				x = vec[i];
				j = i;
				while ((j > 0) && (vec[j - 1] > x))
				{
					vec[j] = vec[j - 1];
					--j;
				}
				vec[j] = x;
			}
		}
	}
}

int main()
{
	unsigned int i;
	//vector<int> random_integers;
	//vector<int> random_integers(20);

	cout << "Program to read in file of random numbers and sort using Quicksort" << endl;
	ifstream fpInput("C:/Users/Arijit/Google Drive/DataStrucAndAlgo/Projects/Datasets/Inputs/IntegerArray.txt");
	if (fpInput.is_open())
	{

		cout << "Opened input file successfully!" << endl;

		//i = 0;
		//while (i < 20)
		//while (fpInput >> random_integers[i])
		//{
		//	fpInput >> random_integers[i];
		//	++i;
		//	cout << i << endl;
		//}
		vector<int> random_integers{ istream_iterator<int>{fpInput},{} };

		fpInput.close();

		//run merge sort algorithm
		QuickSort(random_integers, 0, random_integers.size() - 1);

		cout << "sorted array\n";
		//for (i = 0; i < random_integers.size(); i++)
		//{
		//	cout << endl << random_integers[i];
		//}
		//cout << endl << endl;
		copy(random_integers.begin(), random_integers.end(), ostream_iterator<int>(cout, "\n"));

		ofstream fpOutput;
		fpOutput.open("C:/Users/Arijit/Google Drive/DataStrucAndAlgo/Projects/Datasets/Outputs/MergeSortOutput.txt");
		copy(random_integers.begin(), random_integers.end(), ostream_iterator<int>(fpOutput, "\n"));
		fpOutput.close();

		system("pause");
		return 0;

	}
	else
	{

		cout << "Unable to open input file " << endl;
		system("pause");

		return 1;

	}





}

